grammar at.fhj.gaar.androidapp.AppDsl with org.eclipse.xtext.common.Terminals

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate appDsl "http://www.fhj.at/gaar/androidapp/AppDsl"

AndroidAppProject:
	(applications += Application) (',' applications += Application)*
;

terminal BOOLEAN returns ecore::EBoolean:
    'true' |
    'false' |
    'TRUE' |
    'FALSE'
;

JavaIdentifier:
	ID
;

ClassName:
	ID
;

PackageName:
	ID ('.' ID)*
;

Application:
	'application' packageName = PackageName
	'{'
		// allow only one attribute or more than one (separated by ",")
		attributes += ApplicationAttribute (',' attributes += ApplicationAttribute)*
	'}'
;

ApplicationAttribute:
	ElementLabelAttribute |
	ApplicationMinSdk |
	ApplicationTargetSdk |
	ApplicationCompileSdk |
	ApplicationPermissionList |
	ApplicationElementList |
	ApplicationMainActivity
;

ApplicationMinSdk:
	'min-sdk' minSdk = INT
;

ApplicationTargetSdk:
	'target-sdk' targetSdk = INT
;

ApplicationCompileSdk:
	'compile-sdk' compileSdk = INT
;

ApplicationPermissionList:
	'permissions'
	'['
		// TODO make empty list possible
		permissions += Permission (',' permissions += Permission)*
	']'
;

ApplicationElementList:
	'elements'
	'['
		// TODO make empty list possible
		elements += ApplicationElement (',' elements += ApplicationElement)*
	']'
;

ApplicationMainActivity:
	'main-activity' launcherActivity = ClassName
;

Permission:
	PackageName // android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
;

ApplicationElement: 
	Activity | BroadcastReceiver | Service
;

Activity:
	'activity' className = ClassName
	'{'
		// TODO make empty list possible
		attributes += ActivityAttribute (',' attributes += ActivityAttribute)*
	'}'
;

BroadcastReceiver:
	'receiver' className = ClassName
	'{'
		// TODO make empty list possible
		attributes += BroadcastReceiverAttribute (',' attributes += BroadcastReceiverAttribute)*
	'}'
;

Service:
	'service' className = ClassName
	'{'
		// TODO make empty list possible
		attributes += ServiceAttribute (',' attributes += ServiceAttribute)*
	'}'
;

ActivityAttribute:
	ElementEnabledAttribute |
	ElementExportedAttribute |
	ElementLabelAttribute |
	ElementIntentList |
	ActivityParentAttribute |
	ActivityLayoutAttribute
;

BroadcastReceiverAttribute:
	ElementEnabledAttribute |
	ElementExportedAttribute |
	ElementLabelAttribute |
	ElementIntentList |
	BroadcastReceiverActionAttribute
;

ServiceAttribute:
	ElementEnabledAttribute |
	ElementExportedAttribute |
	ElementLabelAttribute |
	ElementIntentList
;

ElementEnabledAttribute:
	'enabled' enabled = BOOLEAN
;

ElementExportedAttribute:
	'exported' exported = BOOLEAN
;

ElementLabelAttribute:
	'title' title = STRING
;

ElementIntentList:
	'intents'
	'['
		// TODO make empty list possible
		intents += Intent (',' intents += Intent)*
	']'
;

Intent:
	PackageName
;

ActivityParentAttribute:
	'parent' parent = ClassName
;

ActivityLayoutAttribute:
	'layout-elements'
	'['
		// TODO make empty list possible
		layoutElements += LayoutElement (',' layoutElements += LayoutElement)*
	']'
;

LayoutElement:
	Button | Spacer | Text
;

Button:
	'button' buttonName = JavaIdentifier
	'{'
		// TODO make empty list possible
		attributes += ButtonAttribute (',' attributes += ButtonAttribute)*
	'}'
;

ButtonAttribute:
	ButtonLabelAttribute |
	ButtonActionAttribute
;

ButtonLabelAttribute:
	'title' title = STRING
;

ButtonActionAttribute:
	'action' action = LayoutElementClickAction
;

Spacer:
	'spacer'
;

Text:
	'text' text = STRING
;

LayoutElementClickAction:
	ActionShowToast |
	ActionStartActivity |
	ActionStartService
;

BroadcastReceiverActionAttribute:
	'action' action = BroadcastReceiverAction
;

BroadcastReceiverAction:
	ActionShowToast |
	ActionStartActivity |
	ActionStartService
;

ActionShowToast:
	'show-toast' toastText = STRING
;

ActionStartActivity:
	'start-activity' activity = ClassName
;

ActionStartService:
	'start-service' service = ClassName
;
