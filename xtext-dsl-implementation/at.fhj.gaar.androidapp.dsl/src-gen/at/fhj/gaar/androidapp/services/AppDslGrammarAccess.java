/*
* generated by Xtext
*/
package at.fhj.gaar.androidapp.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AppDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AndroidAppProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroidAppProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cApplicationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cApplicationsApplicationParserRuleCall_0_0 = (RuleCall)cApplicationsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cApplicationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cApplicationsApplicationParserRuleCall_1_1_0 = (RuleCall)cApplicationsAssignment_1_1.eContents().get(0);
		
		//AndroidAppProject:
		//	applications+=Application ("," applications+=Application)*;
		public ParserRule getRule() { return rule; }

		//applications+=Application ("," applications+=Application)*
		public Group getGroup() { return cGroup; }

		//applications+=Application
		public Assignment getApplicationsAssignment_0() { return cApplicationsAssignment_0; }

		//Application
		public RuleCall getApplicationsApplicationParserRuleCall_0_0() { return cApplicationsApplicationParserRuleCall_0_0; }

		//("," applications+=Application)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//applications+=Application
		public Assignment getApplicationsAssignment_1_1() { return cApplicationsAssignment_1_1; }

		//Application
		public RuleCall getApplicationsApplicationParserRuleCall_1_1_0() { return cApplicationsApplicationParserRuleCall_1_1_0; }
	}

	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamePACKAGE_NAMETerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesApplicationAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesApplicationAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Application:
		//	"application" name=PACKAGE_NAME "{" // allow only one attribute or more than one (separated by ",")
		//	attributes+=ApplicationAttribute ("," attributes+=ApplicationAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"application" name=PACKAGE_NAME "{" // allow only one attribute or more than one (separated by ",")
		//attributes+=ApplicationAttribute ("," attributes+=ApplicationAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"application"
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }

		//name=PACKAGE_NAME
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//PACKAGE_NAME
		public RuleCall getNamePACKAGE_NAMETerminalRuleCall_1_0() { return cNamePACKAGE_NAMETerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//// allow only one attribute or more than one (separated by ",")
		//attributes+=ApplicationAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ApplicationAttribute
		public RuleCall getAttributesApplicationAttributeParserRuleCall_3_0() { return cAttributesApplicationAttributeParserRuleCall_3_0; }

		//("," attributes+=ApplicationAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ApplicationAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ApplicationAttribute
		public RuleCall getAttributesApplicationAttributeParserRuleCall_4_1_0() { return cAttributesApplicationAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ApplicationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementLabelAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cApplicationMinSdkParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cApplicationTargetSdkParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cApplicationCompileSdkParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cApplicationPermissionListParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cApplicationElementListParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cApplicationMainActivityParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ApplicationAttribute:
		//	ElementLabelAttribute | ApplicationMinSdk | ApplicationTargetSdk | ApplicationCompileSdk | ApplicationPermissionList |
		//	ApplicationElementList | ApplicationMainActivity;
		public ParserRule getRule() { return rule; }

		//ElementLabelAttribute | ApplicationMinSdk | ApplicationTargetSdk | ApplicationCompileSdk | ApplicationPermissionList |
		//ApplicationElementList | ApplicationMainActivity
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementLabelAttribute
		public RuleCall getElementLabelAttributeParserRuleCall_0() { return cElementLabelAttributeParserRuleCall_0; }

		//ApplicationMinSdk
		public RuleCall getApplicationMinSdkParserRuleCall_1() { return cApplicationMinSdkParserRuleCall_1; }

		//ApplicationTargetSdk
		public RuleCall getApplicationTargetSdkParserRuleCall_2() { return cApplicationTargetSdkParserRuleCall_2; }

		//ApplicationCompileSdk
		public RuleCall getApplicationCompileSdkParserRuleCall_3() { return cApplicationCompileSdkParserRuleCall_3; }

		//ApplicationPermissionList
		public RuleCall getApplicationPermissionListParserRuleCall_4() { return cApplicationPermissionListParserRuleCall_4; }

		//ApplicationElementList
		public RuleCall getApplicationElementListParserRuleCall_5() { return cApplicationElementListParserRuleCall_5; }

		//ApplicationMainActivity
		public RuleCall getApplicationMainActivityParserRuleCall_6() { return cApplicationMainActivityParserRuleCall_6; }
	}

	public class ApplicationMinSdkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationMinSdk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMinSdkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMinSdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMinSdkINTTerminalRuleCall_1_0 = (RuleCall)cMinSdkAssignment_1.eContents().get(0);
		
		//ApplicationMinSdk:
		//	"min-sdk" minSdk=INT;
		public ParserRule getRule() { return rule; }

		//"min-sdk" minSdk=INT
		public Group getGroup() { return cGroup; }

		//"min-sdk"
		public Keyword getMinSdkKeyword_0() { return cMinSdkKeyword_0; }

		//minSdk=INT
		public Assignment getMinSdkAssignment_1() { return cMinSdkAssignment_1; }

		//INT
		public RuleCall getMinSdkINTTerminalRuleCall_1_0() { return cMinSdkINTTerminalRuleCall_1_0; }
	}

	public class ApplicationTargetSdkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationTargetSdk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetSdkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetSdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTargetSdkINTTerminalRuleCall_1_0 = (RuleCall)cTargetSdkAssignment_1.eContents().get(0);
		
		//ApplicationTargetSdk:
		//	"target-sdk" targetSdk=INT;
		public ParserRule getRule() { return rule; }

		//"target-sdk" targetSdk=INT
		public Group getGroup() { return cGroup; }

		//"target-sdk"
		public Keyword getTargetSdkKeyword_0() { return cTargetSdkKeyword_0; }

		//targetSdk=INT
		public Assignment getTargetSdkAssignment_1() { return cTargetSdkAssignment_1; }

		//INT
		public RuleCall getTargetSdkINTTerminalRuleCall_1_0() { return cTargetSdkINTTerminalRuleCall_1_0; }
	}

	public class ApplicationCompileSdkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationCompileSdk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompileSdkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCompileSdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCompileSdkINTTerminalRuleCall_1_0 = (RuleCall)cCompileSdkAssignment_1.eContents().get(0);
		
		//ApplicationCompileSdk:
		//	"compile-sdk" compileSdk=INT;
		public ParserRule getRule() { return rule; }

		//"compile-sdk" compileSdk=INT
		public Group getGroup() { return cGroup; }

		//"compile-sdk"
		public Keyword getCompileSdkKeyword_0() { return cCompileSdkKeyword_0; }

		//compileSdk=INT
		public Assignment getCompileSdkAssignment_1() { return cCompileSdkAssignment_1; }

		//INT
		public RuleCall getCompileSdkINTTerminalRuleCall_1_0() { return cCompileSdkINTTerminalRuleCall_1_0; }
	}

	public class ApplicationPermissionListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationPermissionList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPermissionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPermissionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPermissionsPermissionParserRuleCall_2_0 = (RuleCall)cPermissionsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPermissionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPermissionsPermissionParserRuleCall_3_1_0 = (RuleCall)cPermissionsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ApplicationPermissionList:
		//	"permissions" "[" // TODO make empty list possible
		//	permissions+=Permission ("," permissions+=Permission)* "]";
		public ParserRule getRule() { return rule; }

		//"permissions" "[" // TODO make empty list possible
		//permissions+=Permission ("," permissions+=Permission)* "]"
		public Group getGroup() { return cGroup; }

		//"permissions"
		public Keyword getPermissionsKeyword_0() { return cPermissionsKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//// TODO make empty list possible
		//permissions+=Permission
		public Assignment getPermissionsAssignment_2() { return cPermissionsAssignment_2; }

		//Permission
		public RuleCall getPermissionsPermissionParserRuleCall_2_0() { return cPermissionsPermissionParserRuleCall_2_0; }

		//("," permissions+=Permission)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//permissions+=Permission
		public Assignment getPermissionsAssignment_3_1() { return cPermissionsAssignment_3_1; }

		//Permission
		public RuleCall getPermissionsPermissionParserRuleCall_3_1_0() { return cPermissionsPermissionParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ApplicationElementListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationElementList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElementsApplicationElementParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cElementsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cElementsApplicationElementParserRuleCall_3_1_0 = (RuleCall)cElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ApplicationElementList:
		//	"elements" "[" // TODO make empty list possible
		//	elements+=ApplicationElement ("," elements+=ApplicationElement)* "]";
		public ParserRule getRule() { return rule; }

		//"elements" "[" // TODO make empty list possible
		//elements+=ApplicationElement ("," elements+=ApplicationElement)* "]"
		public Group getGroup() { return cGroup; }

		//"elements"
		public Keyword getElementsKeyword_0() { return cElementsKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//// TODO make empty list possible
		//elements+=ApplicationElement
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }

		//ApplicationElement
		public RuleCall getElementsApplicationElementParserRuleCall_2_0() { return cElementsApplicationElementParserRuleCall_2_0; }

		//("," elements+=ApplicationElement)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//elements+=ApplicationElement
		public Assignment getElementsAssignment_3_1() { return cElementsAssignment_3_1; }

		//ApplicationElement
		public RuleCall getElementsApplicationElementParserRuleCall_3_1_0() { return cElementsApplicationElementParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ApplicationMainActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationMainActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMainActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLauncherActivityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cLauncherActivityActivityCrossReference_1_0 = (CrossReference)cLauncherActivityAssignment_1.eContents().get(0);
		private final RuleCall cLauncherActivityActivityIDTerminalRuleCall_1_0_1 = (RuleCall)cLauncherActivityActivityCrossReference_1_0.eContents().get(1);
		
		//ApplicationMainActivity:
		//	"main-activity" launcherActivity= // referenced by the magical "name" of an Activity
		//	[Activity];
		public ParserRule getRule() { return rule; }

		//"main-activity" launcherActivity= // referenced by the magical "name" of an Activity
		//[Activity]
		public Group getGroup() { return cGroup; }

		//"main-activity"
		public Keyword getMainActivityKeyword_0() { return cMainActivityKeyword_0; }

		//launcherActivity= // referenced by the magical "name" of an Activity
		//[Activity]
		public Assignment getLauncherActivityAssignment_1() { return cLauncherActivityAssignment_1; }

		//// referenced by the magical "name" of an Activity
		//[Activity]
		public CrossReference getLauncherActivityActivityCrossReference_1_0() { return cLauncherActivityActivityCrossReference_1_0; }

		//ID
		public RuleCall getLauncherActivityActivityIDTerminalRuleCall_1_0_1() { return cLauncherActivityActivityIDTerminalRuleCall_1_0_1; }
	}

	public class PermissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Permission");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNamePACKAGE_NAMETerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Permission:
		//	name= // android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
		//	PACKAGE_NAME;
		public ParserRule getRule() { return rule; }

		//name= // android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
		//PACKAGE_NAME
		public Assignment getNameAssignment() { return cNameAssignment; }

		//// android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
		//PACKAGE_NAME
		public RuleCall getNamePACKAGE_NAMETerminalRuleCall_0() { return cNamePACKAGE_NAMETerminalRuleCall_0; }
	}

	public class ApplicationElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActivityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBroadcastReceiverParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cServiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ApplicationElement:
		//	Activity | BroadcastReceiver | Service;
		public ParserRule getRule() { return rule; }

		//Activity | BroadcastReceiver | Service
		public Alternatives getAlternatives() { return cAlternatives; }

		//Activity
		public RuleCall getActivityParserRuleCall_0() { return cActivityParserRuleCall_0; }

		//BroadcastReceiver
		public RuleCall getBroadcastReceiverParserRuleCall_1() { return cBroadcastReceiverParserRuleCall_1; }

		//Service
		public RuleCall getServiceParserRuleCall_2() { return cServiceParserRuleCall_2; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesActivityAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesActivityAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Activity:
		//	"activity" name=ID "{" // TODO make empty list possible
		//	attributes+=ActivityAttribute ("," attributes+=ActivityAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"activity" name=ID "{" // TODO make empty list possible
		//attributes+=ActivityAttribute ("," attributes+=ActivityAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"activity"
		public Keyword getActivityKeyword_0() { return cActivityKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//// TODO make empty list possible
		//attributes+=ActivityAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ActivityAttribute
		public RuleCall getAttributesActivityAttributeParserRuleCall_3_0() { return cAttributesActivityAttributeParserRuleCall_3_0; }

		//("," attributes+=ActivityAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ActivityAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ActivityAttribute
		public RuleCall getAttributesActivityAttributeParserRuleCall_4_1_0() { return cAttributesActivityAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class BroadcastReceiverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastReceiver");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReceiverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesBroadcastReceiverAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesBroadcastReceiverAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BroadcastReceiver:
		//	"receiver" name=ID "{" // TODO make empty list possible
		//	attributes+=BroadcastReceiverAttribute ("," attributes+=BroadcastReceiverAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"receiver" name=ID "{" // TODO make empty list possible
		//attributes+=BroadcastReceiverAttribute ("," attributes+=BroadcastReceiverAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"receiver"
		public Keyword getReceiverKeyword_0() { return cReceiverKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//// TODO make empty list possible
		//attributes+=BroadcastReceiverAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//BroadcastReceiverAttribute
		public RuleCall getAttributesBroadcastReceiverAttributeParserRuleCall_3_0() { return cAttributesBroadcastReceiverAttributeParserRuleCall_3_0; }

		//("," attributes+=BroadcastReceiverAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=BroadcastReceiverAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//BroadcastReceiverAttribute
		public RuleCall getAttributesBroadcastReceiverAttributeParserRuleCall_4_1_0() { return cAttributesBroadcastReceiverAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesServiceAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesServiceAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Service:
		//	"service" name=ID "{" // TODO make empty list possible
		//	attributes+=ServiceAttribute ("," attributes+=ServiceAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"service" name=ID "{" // TODO make empty list possible
		//attributes+=ServiceAttribute ("," attributes+=ServiceAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//// TODO make empty list possible
		//attributes+=ServiceAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ServiceAttribute
		public RuleCall getAttributesServiceAttributeParserRuleCall_3_0() { return cAttributesServiceAttributeParserRuleCall_3_0; }

		//("," attributes+=ServiceAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ServiceAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ServiceAttribute
		public RuleCall getAttributesServiceAttributeParserRuleCall_4_1_0() { return cAttributesServiceAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ActivityAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementEnabledAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementExportedAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cElementLabelAttributeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cElementIntentListParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cActivityParentAttributeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cActivityLayoutAttributeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ActivityAttribute:
		//	ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList |
		//	ActivityParentAttribute | ActivityLayoutAttribute;
		public ParserRule getRule() { return rule; }

		//ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList | ActivityParentAttribute
		//| ActivityLayoutAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementEnabledAttribute
		public RuleCall getElementEnabledAttributeParserRuleCall_0() { return cElementEnabledAttributeParserRuleCall_0; }

		//ElementExportedAttribute
		public RuleCall getElementExportedAttributeParserRuleCall_1() { return cElementExportedAttributeParserRuleCall_1; }

		//ElementLabelAttribute
		public RuleCall getElementLabelAttributeParserRuleCall_2() { return cElementLabelAttributeParserRuleCall_2; }

		//ElementIntentList
		public RuleCall getElementIntentListParserRuleCall_3() { return cElementIntentListParserRuleCall_3; }

		//ActivityParentAttribute
		public RuleCall getActivityParentAttributeParserRuleCall_4() { return cActivityParentAttributeParserRuleCall_4; }

		//ActivityLayoutAttribute
		public RuleCall getActivityLayoutAttributeParserRuleCall_5() { return cActivityLayoutAttributeParserRuleCall_5; }
	}

	public class BroadcastReceiverAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastReceiverAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementEnabledAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementExportedAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cElementLabelAttributeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cElementIntentListParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cBroadcastReceiverActionAttributeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//BroadcastReceiverAttribute:
		//	ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList |
		//	BroadcastReceiverActionAttribute;
		public ParserRule getRule() { return rule; }

		//ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList |
		//BroadcastReceiverActionAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementEnabledAttribute
		public RuleCall getElementEnabledAttributeParserRuleCall_0() { return cElementEnabledAttributeParserRuleCall_0; }

		//ElementExportedAttribute
		public RuleCall getElementExportedAttributeParserRuleCall_1() { return cElementExportedAttributeParserRuleCall_1; }

		//ElementLabelAttribute
		public RuleCall getElementLabelAttributeParserRuleCall_2() { return cElementLabelAttributeParserRuleCall_2; }

		//ElementIntentList
		public RuleCall getElementIntentListParserRuleCall_3() { return cElementIntentListParserRuleCall_3; }

		//BroadcastReceiverActionAttribute
		public RuleCall getBroadcastReceiverActionAttributeParserRuleCall_4() { return cBroadcastReceiverActionAttributeParserRuleCall_4; }
	}

	public class ServiceAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementEnabledAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementExportedAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cElementLabelAttributeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cElementIntentListParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ServiceAttribute:
		//	ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList;
		public ParserRule getRule() { return rule; }

		//ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementEnabledAttribute
		public RuleCall getElementEnabledAttributeParserRuleCall_0() { return cElementEnabledAttributeParserRuleCall_0; }

		//ElementExportedAttribute
		public RuleCall getElementExportedAttributeParserRuleCall_1() { return cElementExportedAttributeParserRuleCall_1; }

		//ElementLabelAttribute
		public RuleCall getElementLabelAttributeParserRuleCall_2() { return cElementLabelAttributeParserRuleCall_2; }

		//ElementIntentList
		public RuleCall getElementIntentListParserRuleCall_3() { return cElementIntentListParserRuleCall_3; }
	}

	public class ElementEnabledAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementEnabledAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnabledKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnabledAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnabledBOOLEANTerminalRuleCall_1_0 = (RuleCall)cEnabledAssignment_1.eContents().get(0);
		
		//ElementEnabledAttribute:
		//	"enabled" enabled=BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"enabled" enabled=BOOLEAN
		public Group getGroup() { return cGroup; }

		//"enabled"
		public Keyword getEnabledKeyword_0() { return cEnabledKeyword_0; }

		//enabled=BOOLEAN
		public Assignment getEnabledAssignment_1() { return cEnabledAssignment_1; }

		//BOOLEAN
		public RuleCall getEnabledBOOLEANTerminalRuleCall_1_0() { return cEnabledBOOLEANTerminalRuleCall_1_0; }
	}

	public class ElementExportedAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementExportedAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExportedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExportedAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExportedBOOLEANTerminalRuleCall_1_0 = (RuleCall)cExportedAssignment_1.eContents().get(0);
		
		//ElementExportedAttribute:
		//	"exported" exported=BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"exported" exported=BOOLEAN
		public Group getGroup() { return cGroup; }

		//"exported"
		public Keyword getExportedKeyword_0() { return cExportedKeyword_0; }

		//exported=BOOLEAN
		public Assignment getExportedAssignment_1() { return cExportedAssignment_1; }

		//BOOLEAN
		public RuleCall getExportedBOOLEANTerminalRuleCall_1_0() { return cExportedBOOLEANTerminalRuleCall_1_0; }
	}

	public class ElementLabelAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementLabelAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTitleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		
		//ElementLabelAttribute:
		//	"title" title=STRING;
		public ParserRule getRule() { return rule; }

		//"title" title=STRING
		public Group getGroup() { return cGroup; }

		//"title"
		public Keyword getTitleKeyword_0() { return cTitleKeyword_0; }

		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
	}

	public class ElementIntentListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementIntentList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIntentsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cIntentsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cIntentsIntentParserRuleCall_2_0 = (RuleCall)cIntentsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIntentsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cIntentsIntentParserRuleCall_3_1_0 = (RuleCall)cIntentsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ElementIntentList:
		//	"intents" "[" // TODO make empty list possible
		//	intents+=Intent ("," intents+=Intent)* "]";
		public ParserRule getRule() { return rule; }

		//"intents" "[" // TODO make empty list possible
		//intents+=Intent ("," intents+=Intent)* "]"
		public Group getGroup() { return cGroup; }

		//"intents"
		public Keyword getIntentsKeyword_0() { return cIntentsKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//// TODO make empty list possible
		//intents+=Intent
		public Assignment getIntentsAssignment_2() { return cIntentsAssignment_2; }

		//Intent
		public RuleCall getIntentsIntentParserRuleCall_2_0() { return cIntentsIntentParserRuleCall_2_0; }

		//("," intents+=Intent)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//intents+=Intent
		public Assignment getIntentsAssignment_3_1() { return cIntentsAssignment_3_1; }

		//Intent
		public RuleCall getIntentsIntentParserRuleCall_3_1_0() { return cIntentsIntentParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class IntentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Intent");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNamePACKAGE_NAMETerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Intent:
		//	name=PACKAGE_NAME;
		public ParserRule getRule() { return rule; }

		//name=PACKAGE_NAME
		public Assignment getNameAssignment() { return cNameAssignment; }

		//PACKAGE_NAME
		public RuleCall getNamePACKAGE_NAMETerminalRuleCall_0() { return cNamePACKAGE_NAMETerminalRuleCall_0; }
	}

	public class ActivityParentAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityParentAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cParentAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cParentActivityCrossReference_1_0 = (CrossReference)cParentAssignment_1.eContents().get(0);
		private final RuleCall cParentActivityIDTerminalRuleCall_1_0_1 = (RuleCall)cParentActivityCrossReference_1_0.eContents().get(1);
		
		//ActivityParentAttribute:
		//	"parent" parent=[Activity];
		public ParserRule getRule() { return rule; }

		//"parent" parent=[Activity]
		public Group getGroup() { return cGroup; }

		//"parent"
		public Keyword getParentKeyword_0() { return cParentKeyword_0; }

		//parent=[Activity]
		public Assignment getParentAssignment_1() { return cParentAssignment_1; }

		//[Activity]
		public CrossReference getParentActivityCrossReference_1_0() { return cParentActivityCrossReference_1_0; }

		//ID
		public RuleCall getParentActivityIDTerminalRuleCall_1_0_1() { return cParentActivityIDTerminalRuleCall_1_0_1; }
	}

	public class ActivityLayoutAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityLayoutAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLayoutElementsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cLayoutElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cLayoutElementsLayoutElementParserRuleCall_2_0 = (RuleCall)cLayoutElementsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cLayoutElementsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cLayoutElementsLayoutElementParserRuleCall_3_1_0 = (RuleCall)cLayoutElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ActivityLayoutAttribute:
		//	"layout-elements" "[" // TODO make empty list possible
		//	layoutElements+=LayoutElement ("," layoutElements+=LayoutElement)* "]";
		public ParserRule getRule() { return rule; }

		//"layout-elements" "[" // TODO make empty list possible
		//layoutElements+=LayoutElement ("," layoutElements+=LayoutElement)* "]"
		public Group getGroup() { return cGroup; }

		//"layout-elements"
		public Keyword getLayoutElementsKeyword_0() { return cLayoutElementsKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//// TODO make empty list possible
		//layoutElements+=LayoutElement
		public Assignment getLayoutElementsAssignment_2() { return cLayoutElementsAssignment_2; }

		//LayoutElement
		public RuleCall getLayoutElementsLayoutElementParserRuleCall_2_0() { return cLayoutElementsLayoutElementParserRuleCall_2_0; }

		//("," layoutElements+=LayoutElement)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//layoutElements+=LayoutElement
		public Assignment getLayoutElementsAssignment_3_1() { return cLayoutElementsAssignment_3_1; }

		//LayoutElement
		public RuleCall getLayoutElementsLayoutElementParserRuleCall_3_1_0() { return cLayoutElementsLayoutElementParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class LayoutElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LayoutElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cButtonParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSpacerParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cTextParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//LayoutElement:
		//	Button | Spacer | Text;
		public ParserRule getRule() { return rule; }

		//Button | Spacer | Text
		public Alternatives getAlternatives() { return cAlternatives; }

		//Button
		public RuleCall getButtonParserRuleCall_0() { return cButtonParserRuleCall_0; }

		//Spacer
		public RuleCall getSpacerParserRuleCall_1() { return cSpacerParserRuleCall_1; }

		//Text
		public RuleCall getTextParserRuleCall_2() { return cTextParserRuleCall_2; }
	}

	public class ButtonElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Button");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cButtonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesButtonAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesButtonAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Button:
		//	"button" name=ID "{" // TODO make empty list possible
		//	attributes+=ButtonAttribute ("," attributes+=ButtonAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"button" name=ID "{" // TODO make empty list possible
		//attributes+=ButtonAttribute ("," attributes+=ButtonAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"button"
		public Keyword getButtonKeyword_0() { return cButtonKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//// TODO make empty list possible
		//attributes+=ButtonAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ButtonAttribute
		public RuleCall getAttributesButtonAttributeParserRuleCall_3_0() { return cAttributesButtonAttributeParserRuleCall_3_0; }

		//("," attributes+=ButtonAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ButtonAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ButtonAttribute
		public RuleCall getAttributesButtonAttributeParserRuleCall_4_1_0() { return cAttributesButtonAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ButtonAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ButtonAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cButtonLabelAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cButtonActionAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ButtonAttribute:
		//	ButtonLabelAttribute | ButtonActionAttribute;
		public ParserRule getRule() { return rule; }

		//ButtonLabelAttribute | ButtonActionAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//ButtonLabelAttribute
		public RuleCall getButtonLabelAttributeParserRuleCall_0() { return cButtonLabelAttributeParserRuleCall_0; }

		//ButtonActionAttribute
		public RuleCall getButtonActionAttributeParserRuleCall_1() { return cButtonActionAttributeParserRuleCall_1; }
	}

	public class ButtonLabelAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ButtonLabelAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTitleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		
		//ButtonLabelAttribute:
		//	"title" title=STRING;
		public ParserRule getRule() { return rule; }

		//"title" title=STRING
		public Group getGroup() { return cGroup; }

		//"title"
		public Keyword getTitleKeyword_0() { return cTitleKeyword_0; }

		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
	}

	public class ButtonActionAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ButtonActionAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActionLayoutElementClickActionParserRuleCall_1_0 = (RuleCall)cActionAssignment_1.eContents().get(0);
		
		//ButtonActionAttribute:
		//	"action" action=LayoutElementClickAction;
		public ParserRule getRule() { return rule; }

		//"action" action=LayoutElementClickAction
		public Group getGroup() { return cGroup; }

		//"action"
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }

		//action=LayoutElementClickAction
		public Assignment getActionAssignment_1() { return cActionAssignment_1; }

		//LayoutElementClickAction
		public RuleCall getActionLayoutElementClickActionParserRuleCall_1_0() { return cActionLayoutElementClickActionParserRuleCall_1_0; }
	}

	public class SpacerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Spacer");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cSpacerAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cSpacerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Spacer:
		//	{Spacer} // needs an action ("{Spacer}") to force object creation
		//	"spacer";
		public ParserRule getRule() { return rule; }

		//{Spacer} // needs an action ("{Spacer}") to force object creation
		//"spacer"
		public Group getGroup() { return cGroup; }

		//{Spacer}
		public Action getSpacerAction_0() { return cSpacerAction_0; }

		//// needs an action ("{Spacer}") to force object creation
		//"spacer"
		public Keyword getSpacerKeyword_1() { return cSpacerKeyword_1; }
	}

	public class TextElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Text");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTextKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTextSTRINGTerminalRuleCall_1_0 = (RuleCall)cTextAssignment_1.eContents().get(0);
		
		//Text:
		//	"text" text=STRING;
		public ParserRule getRule() { return rule; }

		//"text" text=STRING
		public Group getGroup() { return cGroup; }

		//"text"
		public Keyword getTextKeyword_0() { return cTextKeyword_0; }

		//text=STRING
		public Assignment getTextAssignment_1() { return cTextAssignment_1; }

		//STRING
		public RuleCall getTextSTRINGTerminalRuleCall_1_0() { return cTextSTRINGTerminalRuleCall_1_0; }
	}

	public class LayoutElementClickActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LayoutElementClickAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionShowToastParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActionStartActivityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActionStartServiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//LayoutElementClickAction:
		//	ActionShowToast | ActionStartActivity | ActionStartService;
		public ParserRule getRule() { return rule; }

		//ActionShowToast | ActionStartActivity | ActionStartService
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActionShowToast
		public RuleCall getActionShowToastParserRuleCall_0() { return cActionShowToastParserRuleCall_0; }

		//ActionStartActivity
		public RuleCall getActionStartActivityParserRuleCall_1() { return cActionStartActivityParserRuleCall_1; }

		//ActionStartService
		public RuleCall getActionStartServiceParserRuleCall_2() { return cActionStartServiceParserRuleCall_2; }
	}

	public class BroadcastReceiverActionAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastReceiverActionAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cActionBroadcastReceiverActionParserRuleCall_1_0 = (RuleCall)cActionAssignment_1.eContents().get(0);
		
		//BroadcastReceiverActionAttribute:
		//	"action" action=BroadcastReceiverAction;
		public ParserRule getRule() { return rule; }

		//"action" action=BroadcastReceiverAction
		public Group getGroup() { return cGroup; }

		//"action"
		public Keyword getActionKeyword_0() { return cActionKeyword_0; }

		//action=BroadcastReceiverAction
		public Assignment getActionAssignment_1() { return cActionAssignment_1; }

		//BroadcastReceiverAction
		public RuleCall getActionBroadcastReceiverActionParserRuleCall_1_0() { return cActionBroadcastReceiverActionParserRuleCall_1_0; }
	}

	public class BroadcastReceiverActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastReceiverAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActionShowToastParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cActionStartActivityParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cActionStartServiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//BroadcastReceiverAction:
		//	ActionShowToast | ActionStartActivity | ActionStartService;
		public ParserRule getRule() { return rule; }

		//ActionShowToast | ActionStartActivity | ActionStartService
		public Alternatives getAlternatives() { return cAlternatives; }

		//ActionShowToast
		public RuleCall getActionShowToastParserRuleCall_0() { return cActionShowToastParserRuleCall_0; }

		//ActionStartActivity
		public RuleCall getActionStartActivityParserRuleCall_1() { return cActionStartActivityParserRuleCall_1; }

		//ActionStartService
		public RuleCall getActionStartServiceParserRuleCall_2() { return cActionStartServiceParserRuleCall_2; }
	}

	public class ActionShowToastElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionShowToast");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cShowToastKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cToastTextAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cToastTextSTRINGTerminalRuleCall_1_0 = (RuleCall)cToastTextAssignment_1.eContents().get(0);
		
		//ActionShowToast:
		//	"show-toast" toastText=STRING;
		public ParserRule getRule() { return rule; }

		//"show-toast" toastText=STRING
		public Group getGroup() { return cGroup; }

		//"show-toast"
		public Keyword getShowToastKeyword_0() { return cShowToastKeyword_0; }

		//toastText=STRING
		public Assignment getToastTextAssignment_1() { return cToastTextAssignment_1; }

		//STRING
		public RuleCall getToastTextSTRINGTerminalRuleCall_1_0() { return cToastTextSTRINGTerminalRuleCall_1_0; }
	}

	public class ActionStartActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionStartActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStartActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cActivityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cActivityActivityCrossReference_1_0 = (CrossReference)cActivityAssignment_1.eContents().get(0);
		private final RuleCall cActivityActivityIDTerminalRuleCall_1_0_1 = (RuleCall)cActivityActivityCrossReference_1_0.eContents().get(1);
		
		//ActionStartActivity:
		//	"start-activity" activity=[Activity];
		public ParserRule getRule() { return rule; }

		//"start-activity" activity=[Activity]
		public Group getGroup() { return cGroup; }

		//"start-activity"
		public Keyword getStartActivityKeyword_0() { return cStartActivityKeyword_0; }

		//activity=[Activity]
		public Assignment getActivityAssignment_1() { return cActivityAssignment_1; }

		//[Activity]
		public CrossReference getActivityActivityCrossReference_1_0() { return cActivityActivityCrossReference_1_0; }

		//ID
		public RuleCall getActivityActivityIDTerminalRuleCall_1_0_1() { return cActivityActivityIDTerminalRuleCall_1_0_1; }
	}

	public class ActionStartServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActionStartService");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cStartServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cServiceAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cServiceServiceCrossReference_1_0 = (CrossReference)cServiceAssignment_1.eContents().get(0);
		private final RuleCall cServiceServiceIDTerminalRuleCall_1_0_1 = (RuleCall)cServiceServiceCrossReference_1_0.eContents().get(1);
		
		//ActionStartService:
		//	"start-service" service= // makes a reference to the "name" of an Service
		//	[Service];
		public ParserRule getRule() { return rule; }

		//"start-service" service= // makes a reference to the "name" of an Service
		//[Service]
		public Group getGroup() { return cGroup; }

		//"start-service"
		public Keyword getStartServiceKeyword_0() { return cStartServiceKeyword_0; }

		//service= // makes a reference to the "name" of an Service
		//[Service]
		public Assignment getServiceAssignment_1() { return cServiceAssignment_1; }

		//// makes a reference to the "name" of an Service
		//[Service]
		public CrossReference getServiceServiceCrossReference_1_0() { return cServiceServiceCrossReference_1_0; }

		//ID
		public RuleCall getServiceServiceIDTerminalRuleCall_1_0_1() { return cServiceServiceIDTerminalRuleCall_1_0_1; }
	}
	
	
	private final AndroidAppProjectElements pAndroidAppProject;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tPACKAGE_NAME;
	private final ApplicationElements pApplication;
	private final ApplicationAttributeElements pApplicationAttribute;
	private final ApplicationMinSdkElements pApplicationMinSdk;
	private final ApplicationTargetSdkElements pApplicationTargetSdk;
	private final ApplicationCompileSdkElements pApplicationCompileSdk;
	private final ApplicationPermissionListElements pApplicationPermissionList;
	private final ApplicationElementListElements pApplicationElementList;
	private final ApplicationMainActivityElements pApplicationMainActivity;
	private final PermissionElements pPermission;
	private final ApplicationElementElements pApplicationElement;
	private final ActivityElements pActivity;
	private final BroadcastReceiverElements pBroadcastReceiver;
	private final ServiceElements pService;
	private final ActivityAttributeElements pActivityAttribute;
	private final BroadcastReceiverAttributeElements pBroadcastReceiverAttribute;
	private final ServiceAttributeElements pServiceAttribute;
	private final ElementEnabledAttributeElements pElementEnabledAttribute;
	private final ElementExportedAttributeElements pElementExportedAttribute;
	private final ElementLabelAttributeElements pElementLabelAttribute;
	private final ElementIntentListElements pElementIntentList;
	private final IntentElements pIntent;
	private final ActivityParentAttributeElements pActivityParentAttribute;
	private final ActivityLayoutAttributeElements pActivityLayoutAttribute;
	private final LayoutElementElements pLayoutElement;
	private final ButtonElements pButton;
	private final ButtonAttributeElements pButtonAttribute;
	private final ButtonLabelAttributeElements pButtonLabelAttribute;
	private final ButtonActionAttributeElements pButtonActionAttribute;
	private final SpacerElements pSpacer;
	private final TextElements pText;
	private final LayoutElementClickActionElements pLayoutElementClickAction;
	private final BroadcastReceiverActionAttributeElements pBroadcastReceiverActionAttribute;
	private final BroadcastReceiverActionElements pBroadcastReceiverAction;
	private final ActionShowToastElements pActionShowToast;
	private final ActionStartActivityElements pActionStartActivity;
	private final ActionStartServiceElements pActionStartService;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AppDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAndroidAppProject = new AndroidAppProjectElements();
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOOLEAN");
		this.tPACKAGE_NAME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PACKAGE_NAME");
		this.pApplication = new ApplicationElements();
		this.pApplicationAttribute = new ApplicationAttributeElements();
		this.pApplicationMinSdk = new ApplicationMinSdkElements();
		this.pApplicationTargetSdk = new ApplicationTargetSdkElements();
		this.pApplicationCompileSdk = new ApplicationCompileSdkElements();
		this.pApplicationPermissionList = new ApplicationPermissionListElements();
		this.pApplicationElementList = new ApplicationElementListElements();
		this.pApplicationMainActivity = new ApplicationMainActivityElements();
		this.pPermission = new PermissionElements();
		this.pApplicationElement = new ApplicationElementElements();
		this.pActivity = new ActivityElements();
		this.pBroadcastReceiver = new BroadcastReceiverElements();
		this.pService = new ServiceElements();
		this.pActivityAttribute = new ActivityAttributeElements();
		this.pBroadcastReceiverAttribute = new BroadcastReceiverAttributeElements();
		this.pServiceAttribute = new ServiceAttributeElements();
		this.pElementEnabledAttribute = new ElementEnabledAttributeElements();
		this.pElementExportedAttribute = new ElementExportedAttributeElements();
		this.pElementLabelAttribute = new ElementLabelAttributeElements();
		this.pElementIntentList = new ElementIntentListElements();
		this.pIntent = new IntentElements();
		this.pActivityParentAttribute = new ActivityParentAttributeElements();
		this.pActivityLayoutAttribute = new ActivityLayoutAttributeElements();
		this.pLayoutElement = new LayoutElementElements();
		this.pButton = new ButtonElements();
		this.pButtonAttribute = new ButtonAttributeElements();
		this.pButtonLabelAttribute = new ButtonLabelAttributeElements();
		this.pButtonActionAttribute = new ButtonActionAttributeElements();
		this.pSpacer = new SpacerElements();
		this.pText = new TextElements();
		this.pLayoutElementClickAction = new LayoutElementClickActionElements();
		this.pBroadcastReceiverActionAttribute = new BroadcastReceiverActionAttributeElements();
		this.pBroadcastReceiverAction = new BroadcastReceiverActionElements();
		this.pActionShowToast = new ActionShowToastElements();
		this.pActionStartActivity = new ActionStartActivityElements();
		this.pActionStartService = new ActionStartServiceElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.fhj.gaar.androidapp.AppDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AndroidAppProject:
	//	applications+=Application ("," applications+=Application)*;
	public AndroidAppProjectElements getAndroidAppProjectAccess() {
		return pAndroidAppProject;
	}
	
	public ParserRule getAndroidAppProjectRule() {
		return getAndroidAppProjectAccess().getRule();
	}

	//terminal BOOLEAN returns ecore::EBoolean:
	//	"true" | "false" | "TRUE" | "FALSE";
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	} 

	//terminal PACKAGE_NAME:
	//	"\"" (ID ("." ID)*) "\"";
	public TerminalRule getPACKAGE_NAMERule() {
		return tPACKAGE_NAME;
	} 

	//Application:
	//	"application" name=PACKAGE_NAME "{" // allow only one attribute or more than one (separated by ",")
	//	attributes+=ApplicationAttribute ("," attributes+=ApplicationAttribute)* "}";
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}

	//ApplicationAttribute:
	//	ElementLabelAttribute | ApplicationMinSdk | ApplicationTargetSdk | ApplicationCompileSdk | ApplicationPermissionList |
	//	ApplicationElementList | ApplicationMainActivity;
	public ApplicationAttributeElements getApplicationAttributeAccess() {
		return pApplicationAttribute;
	}
	
	public ParserRule getApplicationAttributeRule() {
		return getApplicationAttributeAccess().getRule();
	}

	//ApplicationMinSdk:
	//	"min-sdk" minSdk=INT;
	public ApplicationMinSdkElements getApplicationMinSdkAccess() {
		return pApplicationMinSdk;
	}
	
	public ParserRule getApplicationMinSdkRule() {
		return getApplicationMinSdkAccess().getRule();
	}

	//ApplicationTargetSdk:
	//	"target-sdk" targetSdk=INT;
	public ApplicationTargetSdkElements getApplicationTargetSdkAccess() {
		return pApplicationTargetSdk;
	}
	
	public ParserRule getApplicationTargetSdkRule() {
		return getApplicationTargetSdkAccess().getRule();
	}

	//ApplicationCompileSdk:
	//	"compile-sdk" compileSdk=INT;
	public ApplicationCompileSdkElements getApplicationCompileSdkAccess() {
		return pApplicationCompileSdk;
	}
	
	public ParserRule getApplicationCompileSdkRule() {
		return getApplicationCompileSdkAccess().getRule();
	}

	//ApplicationPermissionList:
	//	"permissions" "[" // TODO make empty list possible
	//	permissions+=Permission ("," permissions+=Permission)* "]";
	public ApplicationPermissionListElements getApplicationPermissionListAccess() {
		return pApplicationPermissionList;
	}
	
	public ParserRule getApplicationPermissionListRule() {
		return getApplicationPermissionListAccess().getRule();
	}

	//ApplicationElementList:
	//	"elements" "[" // TODO make empty list possible
	//	elements+=ApplicationElement ("," elements+=ApplicationElement)* "]";
	public ApplicationElementListElements getApplicationElementListAccess() {
		return pApplicationElementList;
	}
	
	public ParserRule getApplicationElementListRule() {
		return getApplicationElementListAccess().getRule();
	}

	//ApplicationMainActivity:
	//	"main-activity" launcherActivity= // referenced by the magical "name" of an Activity
	//	[Activity];
	public ApplicationMainActivityElements getApplicationMainActivityAccess() {
		return pApplicationMainActivity;
	}
	
	public ParserRule getApplicationMainActivityRule() {
		return getApplicationMainActivityAccess().getRule();
	}

	//Permission:
	//	name= // android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
	//	PACKAGE_NAME;
	public PermissionElements getPermissionAccess() {
		return pPermission;
	}
	
	public ParserRule getPermissionRule() {
		return getPermissionAccess().getRule();
	}

	//ApplicationElement:
	//	Activity | BroadcastReceiver | Service;
	public ApplicationElementElements getApplicationElementAccess() {
		return pApplicationElement;
	}
	
	public ParserRule getApplicationElementRule() {
		return getApplicationElementAccess().getRule();
	}

	//Activity:
	//	"activity" name=ID "{" // TODO make empty list possible
	//	attributes+=ActivityAttribute ("," attributes+=ActivityAttribute)* "}";
	public ActivityElements getActivityAccess() {
		return pActivity;
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//BroadcastReceiver:
	//	"receiver" name=ID "{" // TODO make empty list possible
	//	attributes+=BroadcastReceiverAttribute ("," attributes+=BroadcastReceiverAttribute)* "}";
	public BroadcastReceiverElements getBroadcastReceiverAccess() {
		return pBroadcastReceiver;
	}
	
	public ParserRule getBroadcastReceiverRule() {
		return getBroadcastReceiverAccess().getRule();
	}

	//Service:
	//	"service" name=ID "{" // TODO make empty list possible
	//	attributes+=ServiceAttribute ("," attributes+=ServiceAttribute)* "}";
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//ActivityAttribute:
	//	ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList |
	//	ActivityParentAttribute | ActivityLayoutAttribute;
	public ActivityAttributeElements getActivityAttributeAccess() {
		return pActivityAttribute;
	}
	
	public ParserRule getActivityAttributeRule() {
		return getActivityAttributeAccess().getRule();
	}

	//BroadcastReceiverAttribute:
	//	ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList |
	//	BroadcastReceiverActionAttribute;
	public BroadcastReceiverAttributeElements getBroadcastReceiverAttributeAccess() {
		return pBroadcastReceiverAttribute;
	}
	
	public ParserRule getBroadcastReceiverAttributeRule() {
		return getBroadcastReceiverAttributeAccess().getRule();
	}

	//ServiceAttribute:
	//	ElementEnabledAttribute | ElementExportedAttribute | ElementLabelAttribute | ElementIntentList;
	public ServiceAttributeElements getServiceAttributeAccess() {
		return pServiceAttribute;
	}
	
	public ParserRule getServiceAttributeRule() {
		return getServiceAttributeAccess().getRule();
	}

	//ElementEnabledAttribute:
	//	"enabled" enabled=BOOLEAN;
	public ElementEnabledAttributeElements getElementEnabledAttributeAccess() {
		return pElementEnabledAttribute;
	}
	
	public ParserRule getElementEnabledAttributeRule() {
		return getElementEnabledAttributeAccess().getRule();
	}

	//ElementExportedAttribute:
	//	"exported" exported=BOOLEAN;
	public ElementExportedAttributeElements getElementExportedAttributeAccess() {
		return pElementExportedAttribute;
	}
	
	public ParserRule getElementExportedAttributeRule() {
		return getElementExportedAttributeAccess().getRule();
	}

	//ElementLabelAttribute:
	//	"title" title=STRING;
	public ElementLabelAttributeElements getElementLabelAttributeAccess() {
		return pElementLabelAttribute;
	}
	
	public ParserRule getElementLabelAttributeRule() {
		return getElementLabelAttributeAccess().getRule();
	}

	//ElementIntentList:
	//	"intents" "[" // TODO make empty list possible
	//	intents+=Intent ("," intents+=Intent)* "]";
	public ElementIntentListElements getElementIntentListAccess() {
		return pElementIntentList;
	}
	
	public ParserRule getElementIntentListRule() {
		return getElementIntentListAccess().getRule();
	}

	//Intent:
	//	name=PACKAGE_NAME;
	public IntentElements getIntentAccess() {
		return pIntent;
	}
	
	public ParserRule getIntentRule() {
		return getIntentAccess().getRule();
	}

	//ActivityParentAttribute:
	//	"parent" parent=[Activity];
	public ActivityParentAttributeElements getActivityParentAttributeAccess() {
		return pActivityParentAttribute;
	}
	
	public ParserRule getActivityParentAttributeRule() {
		return getActivityParentAttributeAccess().getRule();
	}

	//ActivityLayoutAttribute:
	//	"layout-elements" "[" // TODO make empty list possible
	//	layoutElements+=LayoutElement ("," layoutElements+=LayoutElement)* "]";
	public ActivityLayoutAttributeElements getActivityLayoutAttributeAccess() {
		return pActivityLayoutAttribute;
	}
	
	public ParserRule getActivityLayoutAttributeRule() {
		return getActivityLayoutAttributeAccess().getRule();
	}

	//LayoutElement:
	//	Button | Spacer | Text;
	public LayoutElementElements getLayoutElementAccess() {
		return pLayoutElement;
	}
	
	public ParserRule getLayoutElementRule() {
		return getLayoutElementAccess().getRule();
	}

	//Button:
	//	"button" name=ID "{" // TODO make empty list possible
	//	attributes+=ButtonAttribute ("," attributes+=ButtonAttribute)* "}";
	public ButtonElements getButtonAccess() {
		return pButton;
	}
	
	public ParserRule getButtonRule() {
		return getButtonAccess().getRule();
	}

	//ButtonAttribute:
	//	ButtonLabelAttribute | ButtonActionAttribute;
	public ButtonAttributeElements getButtonAttributeAccess() {
		return pButtonAttribute;
	}
	
	public ParserRule getButtonAttributeRule() {
		return getButtonAttributeAccess().getRule();
	}

	//ButtonLabelAttribute:
	//	"title" title=STRING;
	public ButtonLabelAttributeElements getButtonLabelAttributeAccess() {
		return pButtonLabelAttribute;
	}
	
	public ParserRule getButtonLabelAttributeRule() {
		return getButtonLabelAttributeAccess().getRule();
	}

	//ButtonActionAttribute:
	//	"action" action=LayoutElementClickAction;
	public ButtonActionAttributeElements getButtonActionAttributeAccess() {
		return pButtonActionAttribute;
	}
	
	public ParserRule getButtonActionAttributeRule() {
		return getButtonActionAttributeAccess().getRule();
	}

	//Spacer:
	//	{Spacer} // needs an action ("{Spacer}") to force object creation
	//	"spacer";
	public SpacerElements getSpacerAccess() {
		return pSpacer;
	}
	
	public ParserRule getSpacerRule() {
		return getSpacerAccess().getRule();
	}

	//Text:
	//	"text" text=STRING;
	public TextElements getTextAccess() {
		return pText;
	}
	
	public ParserRule getTextRule() {
		return getTextAccess().getRule();
	}

	//LayoutElementClickAction:
	//	ActionShowToast | ActionStartActivity | ActionStartService;
	public LayoutElementClickActionElements getLayoutElementClickActionAccess() {
		return pLayoutElementClickAction;
	}
	
	public ParserRule getLayoutElementClickActionRule() {
		return getLayoutElementClickActionAccess().getRule();
	}

	//BroadcastReceiverActionAttribute:
	//	"action" action=BroadcastReceiverAction;
	public BroadcastReceiverActionAttributeElements getBroadcastReceiverActionAttributeAccess() {
		return pBroadcastReceiverActionAttribute;
	}
	
	public ParserRule getBroadcastReceiverActionAttributeRule() {
		return getBroadcastReceiverActionAttributeAccess().getRule();
	}

	//BroadcastReceiverAction:
	//	ActionShowToast | ActionStartActivity | ActionStartService;
	public BroadcastReceiverActionElements getBroadcastReceiverActionAccess() {
		return pBroadcastReceiverAction;
	}
	
	public ParserRule getBroadcastReceiverActionRule() {
		return getBroadcastReceiverActionAccess().getRule();
	}

	//ActionShowToast:
	//	"show-toast" toastText=STRING;
	public ActionShowToastElements getActionShowToastAccess() {
		return pActionShowToast;
	}
	
	public ParserRule getActionShowToastRule() {
		return getActionShowToastAccess().getRule();
	}

	//ActionStartActivity:
	//	"start-activity" activity=[Activity];
	public ActionStartActivityElements getActionStartActivityAccess() {
		return pActionStartActivity;
	}
	
	public ParserRule getActionStartActivityRule() {
		return getActionStartActivityAccess().getRule();
	}

	//ActionStartService:
	//	"start-service" service= // makes a reference to the "name" of an Service
	//	[Service];
	public ActionStartServiceElements getActionStartServiceAccess() {
		return pActionStartService;
	}
	
	public ParserRule getActionStartServiceRule() {
		return getActionStartServiceAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
