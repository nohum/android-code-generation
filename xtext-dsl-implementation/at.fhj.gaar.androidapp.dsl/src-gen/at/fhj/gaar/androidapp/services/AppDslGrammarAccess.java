/*
* generated by Xtext
*/
package at.fhj.gaar.androidapp.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class AppDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class AndroidAppProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndroidAppProject");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cApplicationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cApplicationsApplicationParserRuleCall_0_0 = (RuleCall)cApplicationsAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cApplicationsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cApplicationsApplicationParserRuleCall_1_1_0 = (RuleCall)cApplicationsAssignment_1_1.eContents().get(0);
		
		//AndroidAppProject:
		//	applications+=Application ("," applications+=Application)*;
		public ParserRule getRule() { return rule; }

		//applications+=Application ("," applications+=Application)*
		public Group getGroup() { return cGroup; }

		//applications+=Application
		public Assignment getApplicationsAssignment_0() { return cApplicationsAssignment_0; }

		//Application
		public RuleCall getApplicationsApplicationParserRuleCall_0_0() { return cApplicationsApplicationParserRuleCall_0_0; }

		//("," applications+=Application)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//applications+=Application
		public Assignment getApplicationsAssignment_1_1() { return cApplicationsAssignment_1_1; }

		//Application
		public RuleCall getApplicationsApplicationParserRuleCall_1_1_0() { return cApplicationsApplicationParserRuleCall_1_1_0; }
	}

	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApplicationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cPackageNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cPackageNamePackageNameParserRuleCall_1_0 = (RuleCall)cPackageNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesApplicationAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesApplicationAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Application:
		//	"application" packageName=PackageName "{" // allow only one attribute or more than one (separated by ",")
		//	attributes+=ApplicationAttribute ("," attributes+=ApplicationAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"application" packageName=PackageName "{" // allow only one attribute or more than one (separated by ",")
		//attributes+=ApplicationAttribute ("," attributes+=ApplicationAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"application"
		public Keyword getApplicationKeyword_0() { return cApplicationKeyword_0; }

		//packageName=PackageName
		public Assignment getPackageNameAssignment_1() { return cPackageNameAssignment_1; }

		//PackageName
		public RuleCall getPackageNamePackageNameParserRuleCall_1_0() { return cPackageNamePackageNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//// allow only one attribute or more than one (separated by ",")
		//attributes+=ApplicationAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ApplicationAttribute
		public RuleCall getAttributesApplicationAttributeParserRuleCall_3_0() { return cAttributesApplicationAttributeParserRuleCall_3_0; }

		//("," attributes+=ApplicationAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ApplicationAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ApplicationAttribute
		public RuleCall getAttributesApplicationAttributeParserRuleCall_4_1_0() { return cAttributesApplicationAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ClassNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClassName");
		private final RuleCall cIDTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ClassName:
		//	ID;
		public ParserRule getRule() { return rule; }

		//ID
		public RuleCall getIDTerminalRuleCall() { return cIDTerminalRuleCall; }
	}

	public class PackageNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackageName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1_1 = (RuleCall)cGroup_1.eContents().get(1);
		
		//PackageName:
		//	ID ("." ID)*;
		public ParserRule getRule() { return rule; }

		//ID ("." ID)*
		public Group getGroup() { return cGroup; }

		//ID
		public RuleCall getIDTerminalRuleCall_0() { return cIDTerminalRuleCall_0; }

		//("." ID)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_1_1() { return cIDTerminalRuleCall_1_1; }
	}

	public class ApplicationAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cApplicationTitleParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cApplicationMinSdkParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cApplicationTargetSdkParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cApplicationCompileSdkParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cApplicationPermissionListParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cApplicationElementListParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cApplicationMainActivityParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//ApplicationAttribute:
		//	ApplicationTitle | ApplicationMinSdk | ApplicationTargetSdk | ApplicationCompileSdk | ApplicationPermissionList |
		//	ApplicationElementList | ApplicationMainActivity;
		public ParserRule getRule() { return rule; }

		//ApplicationTitle | ApplicationMinSdk | ApplicationTargetSdk | ApplicationCompileSdk | ApplicationPermissionList |
		//ApplicationElementList | ApplicationMainActivity
		public Alternatives getAlternatives() { return cAlternatives; }

		//ApplicationTitle
		public RuleCall getApplicationTitleParserRuleCall_0() { return cApplicationTitleParserRuleCall_0; }

		//ApplicationMinSdk
		public RuleCall getApplicationMinSdkParserRuleCall_1() { return cApplicationMinSdkParserRuleCall_1; }

		//ApplicationTargetSdk
		public RuleCall getApplicationTargetSdkParserRuleCall_2() { return cApplicationTargetSdkParserRuleCall_2; }

		//ApplicationCompileSdk
		public RuleCall getApplicationCompileSdkParserRuleCall_3() { return cApplicationCompileSdkParserRuleCall_3; }

		//ApplicationPermissionList
		public RuleCall getApplicationPermissionListParserRuleCall_4() { return cApplicationPermissionListParserRuleCall_4; }

		//ApplicationElementList
		public RuleCall getApplicationElementListParserRuleCall_5() { return cApplicationElementListParserRuleCall_5; }

		//ApplicationMainActivity
		public RuleCall getApplicationMainActivityParserRuleCall_6() { return cApplicationMainActivityParserRuleCall_6; }
	}

	public class ApplicationTitleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationTitle");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTitleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTitleAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTitleSTRINGTerminalRuleCall_1_0 = (RuleCall)cTitleAssignment_1.eContents().get(0);
		
		//ApplicationTitle:
		//	"title" title=STRING;
		public ParserRule getRule() { return rule; }

		//"title" title=STRING
		public Group getGroup() { return cGroup; }

		//"title"
		public Keyword getTitleKeyword_0() { return cTitleKeyword_0; }

		//title=STRING
		public Assignment getTitleAssignment_1() { return cTitleAssignment_1; }

		//STRING
		public RuleCall getTitleSTRINGTerminalRuleCall_1_0() { return cTitleSTRINGTerminalRuleCall_1_0; }
	}

	public class ApplicationMinSdkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationMinSdk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMinSdkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMinSdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMinSdkINTTerminalRuleCall_1_0 = (RuleCall)cMinSdkAssignment_1.eContents().get(0);
		
		//ApplicationMinSdk:
		//	"min-sdk" minSdk=INT;
		public ParserRule getRule() { return rule; }

		//"min-sdk" minSdk=INT
		public Group getGroup() { return cGroup; }

		//"min-sdk"
		public Keyword getMinSdkKeyword_0() { return cMinSdkKeyword_0; }

		//minSdk=INT
		public Assignment getMinSdkAssignment_1() { return cMinSdkAssignment_1; }

		//INT
		public RuleCall getMinSdkINTTerminalRuleCall_1_0() { return cMinSdkINTTerminalRuleCall_1_0; }
	}

	public class ApplicationTargetSdkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationTargetSdk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTargetSdkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTargetSdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTargetSdkINTTerminalRuleCall_1_0 = (RuleCall)cTargetSdkAssignment_1.eContents().get(0);
		
		//ApplicationTargetSdk:
		//	"target-sdk" targetSdk=INT;
		public ParserRule getRule() { return rule; }

		//"target-sdk" targetSdk=INT
		public Group getGroup() { return cGroup; }

		//"target-sdk"
		public Keyword getTargetSdkKeyword_0() { return cTargetSdkKeyword_0; }

		//targetSdk=INT
		public Assignment getTargetSdkAssignment_1() { return cTargetSdkAssignment_1; }

		//INT
		public RuleCall getTargetSdkINTTerminalRuleCall_1_0() { return cTargetSdkINTTerminalRuleCall_1_0; }
	}

	public class ApplicationCompileSdkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationCompileSdk");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCompileSdkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cCompileSdkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cCompileSdkINTTerminalRuleCall_1_0 = (RuleCall)cCompileSdkAssignment_1.eContents().get(0);
		
		//ApplicationCompileSdk:
		//	"compile-sdk" compileSdk=INT;
		public ParserRule getRule() { return rule; }

		//"compile-sdk" compileSdk=INT
		public Group getGroup() { return cGroup; }

		//"compile-sdk"
		public Keyword getCompileSdkKeyword_0() { return cCompileSdkKeyword_0; }

		//compileSdk=INT
		public Assignment getCompileSdkAssignment_1() { return cCompileSdkAssignment_1; }

		//INT
		public RuleCall getCompileSdkINTTerminalRuleCall_1_0() { return cCompileSdkINTTerminalRuleCall_1_0; }
	}

	public class ApplicationPermissionListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationPermissionList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPermissionsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPermissionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPermissionsPermissionParserRuleCall_2_0 = (RuleCall)cPermissionsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cPermissionsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cPermissionsPermissionParserRuleCall_3_1_0 = (RuleCall)cPermissionsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ApplicationPermissionList:
		//	"permissions" "[" permissions+=Permission ("," permissions+=Permission)* "]";
		public ParserRule getRule() { return rule; }

		//"permissions" "[" permissions+=Permission ("," permissions+=Permission)* "]"
		public Group getGroup() { return cGroup; }

		//"permissions"
		public Keyword getPermissionsKeyword_0() { return cPermissionsKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//permissions+=Permission
		public Assignment getPermissionsAssignment_2() { return cPermissionsAssignment_2; }

		//Permission
		public RuleCall getPermissionsPermissionParserRuleCall_2_0() { return cPermissionsPermissionParserRuleCall_2_0; }

		//("," permissions+=Permission)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//permissions+=Permission
		public Assignment getPermissionsAssignment_3_1() { return cPermissionsAssignment_3_1; }

		//Permission
		public RuleCall getPermissionsPermissionParserRuleCall_3_1_0() { return cPermissionsPermissionParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ApplicationElementListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationElementList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cElementsKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cElementsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cElementsApplicationElementParserRuleCall_2_0 = (RuleCall)cElementsAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cElementsAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cElementsApplicationElementParserRuleCall_3_1_0 = (RuleCall)cElementsAssignment_3_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ApplicationElementList:
		//	"elements" "[" elements+=ApplicationElement ("," elements+=ApplicationElement)* "]";
		public ParserRule getRule() { return rule; }

		//"elements" "[" elements+=ApplicationElement ("," elements+=ApplicationElement)* "]"
		public Group getGroup() { return cGroup; }

		//"elements"
		public Keyword getElementsKeyword_0() { return cElementsKeyword_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1() { return cLeftSquareBracketKeyword_1; }

		//elements+=ApplicationElement
		public Assignment getElementsAssignment_2() { return cElementsAssignment_2; }

		//ApplicationElement
		public RuleCall getElementsApplicationElementParserRuleCall_2_0() { return cElementsApplicationElementParserRuleCall_2_0; }

		//("," elements+=ApplicationElement)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//elements+=ApplicationElement
		public Assignment getElementsAssignment_3_1() { return cElementsAssignment_3_1; }

		//ApplicationElement
		public RuleCall getElementsApplicationElementParserRuleCall_3_1_0() { return cElementsApplicationElementParserRuleCall_3_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_4() { return cRightSquareBracketKeyword_4; }
	}

	public class ApplicationMainActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationMainActivity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMainActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLauncherActivityAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLauncherActivitySTRINGTerminalRuleCall_1_0 = (RuleCall)cLauncherActivityAssignment_1.eContents().get(0);
		
		//ApplicationMainActivity:
		//	"main-activity" launcherActivity=STRING;
		public ParserRule getRule() { return rule; }

		//"main-activity" launcherActivity=STRING
		public Group getGroup() { return cGroup; }

		//"main-activity"
		public Keyword getMainActivityKeyword_0() { return cMainActivityKeyword_0; }

		//launcherActivity=STRING
		public Assignment getLauncherActivityAssignment_1() { return cLauncherActivityAssignment_1; }

		//STRING
		public RuleCall getLauncherActivitySTRINGTerminalRuleCall_1_0() { return cLauncherActivitySTRINGTerminalRuleCall_1_0; }
	}

	public class PermissionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Permission");
		private final RuleCall cPackageNameParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Permission: // android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
		//	PackageName;
		public ParserRule getRule() { return rule; }

		//// android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
		//PackageName
		public RuleCall getPackageNameParserRuleCall() { return cPackageNameParserRuleCall; }
	}

	public class ApplicationElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ApplicationElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cActivityParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cBroadcastReceiverParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cServiceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ApplicationElement:
		//	Activity | BroadcastReceiver | Service;
		public ParserRule getRule() { return rule; }

		//Activity | BroadcastReceiver | Service
		public Alternatives getAlternatives() { return cAlternatives; }

		//Activity
		public RuleCall getActivityParserRuleCall_0() { return cActivityParserRuleCall_0; }

		//BroadcastReceiver
		public RuleCall getBroadcastReceiverParserRuleCall_1() { return cBroadcastReceiverParserRuleCall_1; }

		//Service
		public RuleCall getServiceParserRuleCall_2() { return cServiceParserRuleCall_2; }
	}

	public class ActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Activity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cActivityKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassNameClassNameParserRuleCall_1_0 = (RuleCall)cClassNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesActivityAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesActivityAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Activity:
		//	"activity" className=ClassName "{" attributes+=ActivityAttribute ("," attributes+=ActivityAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"activity" className=ClassName "{" attributes+=ActivityAttribute ("," attributes+=ActivityAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"activity"
		public Keyword getActivityKeyword_0() { return cActivityKeyword_0; }

		//className=ClassName
		public Assignment getClassNameAssignment_1() { return cClassNameAssignment_1; }

		//ClassName
		public RuleCall getClassNameClassNameParserRuleCall_1_0() { return cClassNameClassNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//attributes+=ActivityAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ActivityAttribute
		public RuleCall getAttributesActivityAttributeParserRuleCall_3_0() { return cAttributesActivityAttributeParserRuleCall_3_0; }

		//("," attributes+=ActivityAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ActivityAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ActivityAttribute
		public RuleCall getAttributesActivityAttributeParserRuleCall_4_1_0() { return cAttributesActivityAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class BroadcastReceiverElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastReceiver");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cReceiverKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassNameClassNameParserRuleCall_1_0 = (RuleCall)cClassNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesBroadcastReceiverAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesBroadcastReceiverAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//BroadcastReceiver:
		//	"receiver" className=ClassName "{" attributes+=BroadcastReceiverAttribute (","
		//	attributes+=BroadcastReceiverAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"receiver" className=ClassName "{" attributes+=BroadcastReceiverAttribute ("," attributes+=BroadcastReceiverAttribute)*
		//"}"
		public Group getGroup() { return cGroup; }

		//"receiver"
		public Keyword getReceiverKeyword_0() { return cReceiverKeyword_0; }

		//className=ClassName
		public Assignment getClassNameAssignment_1() { return cClassNameAssignment_1; }

		//ClassName
		public RuleCall getClassNameClassNameParserRuleCall_1_0() { return cClassNameClassNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//attributes+=BroadcastReceiverAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//BroadcastReceiverAttribute
		public RuleCall getAttributesBroadcastReceiverAttributeParserRuleCall_3_0() { return cAttributesBroadcastReceiverAttributeParserRuleCall_3_0; }

		//("," attributes+=BroadcastReceiverAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=BroadcastReceiverAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//BroadcastReceiverAttribute
		public RuleCall getAttributesBroadcastReceiverAttributeParserRuleCall_4_1_0() { return cAttributesBroadcastReceiverAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ServiceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Service");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cServiceKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cClassNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cClassNameClassNameParserRuleCall_1_0 = (RuleCall)cClassNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cAttributesAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cAttributesServiceAttributeParserRuleCall_3_0 = (RuleCall)cAttributesAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cAttributesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cAttributesServiceAttributeParserRuleCall_4_1_0 = (RuleCall)cAttributesAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Service:
		//	"service" className=ClassName "{" attributes+=ServiceAttribute ("," attributes+=ServiceAttribute)* "}";
		public ParserRule getRule() { return rule; }

		//"service" className=ClassName "{" attributes+=ServiceAttribute ("," attributes+=ServiceAttribute)* "}"
		public Group getGroup() { return cGroup; }

		//"service"
		public Keyword getServiceKeyword_0() { return cServiceKeyword_0; }

		//className=ClassName
		public Assignment getClassNameAssignment_1() { return cClassNameAssignment_1; }

		//ClassName
		public RuleCall getClassNameClassNameParserRuleCall_1_0() { return cClassNameClassNameParserRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//attributes+=ServiceAttribute
		public Assignment getAttributesAssignment_3() { return cAttributesAssignment_3; }

		//ServiceAttribute
		public RuleCall getAttributesServiceAttributeParserRuleCall_3_0() { return cAttributesServiceAttributeParserRuleCall_3_0; }

		//("," attributes+=ServiceAttribute)*
		public Group getGroup_4() { return cGroup_4; }

		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }

		//attributes+=ServiceAttribute
		public Assignment getAttributesAssignment_4_1() { return cAttributesAssignment_4_1; }

		//ServiceAttribute
		public RuleCall getAttributesServiceAttributeParserRuleCall_4_1_0() { return cAttributesServiceAttributeParserRuleCall_4_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ActivityAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ActivityAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementEnabledAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementExportedAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ActivityAttribute:
		//	ElementEnabledAttribute | ElementExportedAttribute;
		public ParserRule getRule() { return rule; }

		//ElementEnabledAttribute | ElementExportedAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementEnabledAttribute
		public RuleCall getElementEnabledAttributeParserRuleCall_0() { return cElementEnabledAttributeParserRuleCall_0; }

		//ElementExportedAttribute
		public RuleCall getElementExportedAttributeParserRuleCall_1() { return cElementExportedAttributeParserRuleCall_1; }
	}

	public class BroadcastReceiverAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BroadcastReceiverAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementEnabledAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementExportedAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//BroadcastReceiverAttribute:
		//	ElementEnabledAttribute | ElementExportedAttribute;
		public ParserRule getRule() { return rule; }

		//ElementEnabledAttribute | ElementExportedAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementEnabledAttribute
		public RuleCall getElementEnabledAttributeParserRuleCall_0() { return cElementEnabledAttributeParserRuleCall_0; }

		//ElementExportedAttribute
		public RuleCall getElementExportedAttributeParserRuleCall_1() { return cElementExportedAttributeParserRuleCall_1; }
	}

	public class ServiceAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ServiceAttribute");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cElementEnabledAttributeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cElementExportedAttributeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ServiceAttribute:
		//	ElementEnabledAttribute | ElementExportedAttribute;
		public ParserRule getRule() { return rule; }

		//ElementEnabledAttribute | ElementExportedAttribute
		public Alternatives getAlternatives() { return cAlternatives; }

		//ElementEnabledAttribute
		public RuleCall getElementEnabledAttributeParserRuleCall_0() { return cElementEnabledAttributeParserRuleCall_0; }

		//ElementExportedAttribute
		public RuleCall getElementExportedAttributeParserRuleCall_1() { return cElementExportedAttributeParserRuleCall_1; }
	}

	public class ElementEnabledAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementEnabledAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEnabledKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cEnabledAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cEnabledBOOLEANTerminalRuleCall_1_0 = (RuleCall)cEnabledAssignment_1.eContents().get(0);
		
		//ElementEnabledAttribute:
		//	"enabled" enabled=BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"enabled" enabled=BOOLEAN
		public Group getGroup() { return cGroup; }

		//"enabled"
		public Keyword getEnabledKeyword_0() { return cEnabledKeyword_0; }

		//enabled=BOOLEAN
		public Assignment getEnabledAssignment_1() { return cEnabledAssignment_1; }

		//BOOLEAN
		public RuleCall getEnabledBOOLEANTerminalRuleCall_1_0() { return cEnabledBOOLEANTerminalRuleCall_1_0; }
	}

	public class ElementExportedAttributeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ElementExportedAttribute");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cExportedKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExportedAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExportedBOOLEANTerminalRuleCall_1_0 = (RuleCall)cExportedAssignment_1.eContents().get(0);
		
		//ElementExportedAttribute:
		//	"exported" exported=BOOLEAN;
		public ParserRule getRule() { return rule; }

		//"exported" exported=BOOLEAN
		public Group getGroup() { return cGroup; }

		//"exported"
		public Keyword getExportedKeyword_0() { return cExportedKeyword_0; }

		//exported=BOOLEAN
		public Assignment getExportedAssignment_1() { return cExportedAssignment_1; }

		//BOOLEAN
		public RuleCall getExportedBOOLEANTerminalRuleCall_1_0() { return cExportedBOOLEANTerminalRuleCall_1_0; }
	}
	
	
	private final AndroidAppProjectElements pAndroidAppProject;
	private final TerminalRule tBOOLEAN;
	private final ApplicationElements pApplication;
	private final ClassNameElements pClassName;
	private final PackageNameElements pPackageName;
	private final ApplicationAttributeElements pApplicationAttribute;
	private final ApplicationTitleElements pApplicationTitle;
	private final ApplicationMinSdkElements pApplicationMinSdk;
	private final ApplicationTargetSdkElements pApplicationTargetSdk;
	private final ApplicationCompileSdkElements pApplicationCompileSdk;
	private final ApplicationPermissionListElements pApplicationPermissionList;
	private final ApplicationElementListElements pApplicationElementList;
	private final ApplicationMainActivityElements pApplicationMainActivity;
	private final PermissionElements pPermission;
	private final ApplicationElementElements pApplicationElement;
	private final ActivityElements pActivity;
	private final BroadcastReceiverElements pBroadcastReceiver;
	private final ServiceElements pService;
	private final ActivityAttributeElements pActivityAttribute;
	private final BroadcastReceiverAttributeElements pBroadcastReceiverAttribute;
	private final ServiceAttributeElements pServiceAttribute;
	private final ElementEnabledAttributeElements pElementEnabledAttribute;
	private final ElementExportedAttributeElements pElementExportedAttribute;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public AppDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pAndroidAppProject = new AndroidAppProjectElements();
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BOOLEAN");
		this.pApplication = new ApplicationElements();
		this.pClassName = new ClassNameElements();
		this.pPackageName = new PackageNameElements();
		this.pApplicationAttribute = new ApplicationAttributeElements();
		this.pApplicationTitle = new ApplicationTitleElements();
		this.pApplicationMinSdk = new ApplicationMinSdkElements();
		this.pApplicationTargetSdk = new ApplicationTargetSdkElements();
		this.pApplicationCompileSdk = new ApplicationCompileSdkElements();
		this.pApplicationPermissionList = new ApplicationPermissionListElements();
		this.pApplicationElementList = new ApplicationElementListElements();
		this.pApplicationMainActivity = new ApplicationMainActivityElements();
		this.pPermission = new PermissionElements();
		this.pApplicationElement = new ApplicationElementElements();
		this.pActivity = new ActivityElements();
		this.pBroadcastReceiver = new BroadcastReceiverElements();
		this.pService = new ServiceElements();
		this.pActivityAttribute = new ActivityAttributeElements();
		this.pBroadcastReceiverAttribute = new BroadcastReceiverAttributeElements();
		this.pServiceAttribute = new ServiceAttributeElements();
		this.pElementEnabledAttribute = new ElementEnabledAttributeElements();
		this.pElementExportedAttribute = new ElementExportedAttributeElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("at.fhj.gaar.androidapp.AppDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//AndroidAppProject:
	//	applications+=Application ("," applications+=Application)*;
	public AndroidAppProjectElements getAndroidAppProjectAccess() {
		return pAndroidAppProject;
	}
	
	public ParserRule getAndroidAppProjectRule() {
		return getAndroidAppProjectAccess().getRule();
	}

	//terminal BOOLEAN returns ecore::EBoolean:
	//	"true" | "false" | "TRUE" | "FALSE";
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	} 

	//Application:
	//	"application" packageName=PackageName "{" // allow only one attribute or more than one (separated by ",")
	//	attributes+=ApplicationAttribute ("," attributes+=ApplicationAttribute)* "}";
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}

	//ClassName:
	//	ID;
	public ClassNameElements getClassNameAccess() {
		return pClassName;
	}
	
	public ParserRule getClassNameRule() {
		return getClassNameAccess().getRule();
	}

	//PackageName:
	//	ID ("." ID)*;
	public PackageNameElements getPackageNameAccess() {
		return pPackageName;
	}
	
	public ParserRule getPackageNameRule() {
		return getPackageNameAccess().getRule();
	}

	//ApplicationAttribute:
	//	ApplicationTitle | ApplicationMinSdk | ApplicationTargetSdk | ApplicationCompileSdk | ApplicationPermissionList |
	//	ApplicationElementList | ApplicationMainActivity;
	public ApplicationAttributeElements getApplicationAttributeAccess() {
		return pApplicationAttribute;
	}
	
	public ParserRule getApplicationAttributeRule() {
		return getApplicationAttributeAccess().getRule();
	}

	//ApplicationTitle:
	//	"title" title=STRING;
	public ApplicationTitleElements getApplicationTitleAccess() {
		return pApplicationTitle;
	}
	
	public ParserRule getApplicationTitleRule() {
		return getApplicationTitleAccess().getRule();
	}

	//ApplicationMinSdk:
	//	"min-sdk" minSdk=INT;
	public ApplicationMinSdkElements getApplicationMinSdkAccess() {
		return pApplicationMinSdk;
	}
	
	public ParserRule getApplicationMinSdkRule() {
		return getApplicationMinSdkAccess().getRule();
	}

	//ApplicationTargetSdk:
	//	"target-sdk" targetSdk=INT;
	public ApplicationTargetSdkElements getApplicationTargetSdkAccess() {
		return pApplicationTargetSdk;
	}
	
	public ParserRule getApplicationTargetSdkRule() {
		return getApplicationTargetSdkAccess().getRule();
	}

	//ApplicationCompileSdk:
	//	"compile-sdk" compileSdk=INT;
	public ApplicationCompileSdkElements getApplicationCompileSdkAccess() {
		return pApplicationCompileSdk;
	}
	
	public ParserRule getApplicationCompileSdkRule() {
		return getApplicationCompileSdkAccess().getRule();
	}

	//ApplicationPermissionList:
	//	"permissions" "[" permissions+=Permission ("," permissions+=Permission)* "]";
	public ApplicationPermissionListElements getApplicationPermissionListAccess() {
		return pApplicationPermissionList;
	}
	
	public ParserRule getApplicationPermissionListRule() {
		return getApplicationPermissionListAccess().getRule();
	}

	//ApplicationElementList:
	//	"elements" "[" elements+=ApplicationElement ("," elements+=ApplicationElement)* "]";
	public ApplicationElementListElements getApplicationElementListAccess() {
		return pApplicationElementList;
	}
	
	public ParserRule getApplicationElementListRule() {
		return getApplicationElementListAccess().getRule();
	}

	//ApplicationMainActivity:
	//	"main-activity" launcherActivity=STRING;
	public ApplicationMainActivityElements getApplicationMainActivityAccess() {
		return pApplicationMainActivity;
	}
	
	public ParserRule getApplicationMainActivityRule() {
		return getApplicationMainActivityAccess().getRule();
	}

	//Permission: // android permissions are in packagename fortmat (e.g. "android.permission.INTERNET")
	//	PackageName;
	public PermissionElements getPermissionAccess() {
		return pPermission;
	}
	
	public ParserRule getPermissionRule() {
		return getPermissionAccess().getRule();
	}

	//ApplicationElement:
	//	Activity | BroadcastReceiver | Service;
	public ApplicationElementElements getApplicationElementAccess() {
		return pApplicationElement;
	}
	
	public ParserRule getApplicationElementRule() {
		return getApplicationElementAccess().getRule();
	}

	//Activity:
	//	"activity" className=ClassName "{" attributes+=ActivityAttribute ("," attributes+=ActivityAttribute)* "}";
	public ActivityElements getActivityAccess() {
		return pActivity;
	}
	
	public ParserRule getActivityRule() {
		return getActivityAccess().getRule();
	}

	//BroadcastReceiver:
	//	"receiver" className=ClassName "{" attributes+=BroadcastReceiverAttribute (","
	//	attributes+=BroadcastReceiverAttribute)* "}";
	public BroadcastReceiverElements getBroadcastReceiverAccess() {
		return pBroadcastReceiver;
	}
	
	public ParserRule getBroadcastReceiverRule() {
		return getBroadcastReceiverAccess().getRule();
	}

	//Service:
	//	"service" className=ClassName "{" attributes+=ServiceAttribute ("," attributes+=ServiceAttribute)* "}";
	public ServiceElements getServiceAccess() {
		return pService;
	}
	
	public ParserRule getServiceRule() {
		return getServiceAccess().getRule();
	}

	//ActivityAttribute:
	//	ElementEnabledAttribute | ElementExportedAttribute;
	public ActivityAttributeElements getActivityAttributeAccess() {
		return pActivityAttribute;
	}
	
	public ParserRule getActivityAttributeRule() {
		return getActivityAttributeAccess().getRule();
	}

	//BroadcastReceiverAttribute:
	//	ElementEnabledAttribute | ElementExportedAttribute;
	public BroadcastReceiverAttributeElements getBroadcastReceiverAttributeAccess() {
		return pBroadcastReceiverAttribute;
	}
	
	public ParserRule getBroadcastReceiverAttributeRule() {
		return getBroadcastReceiverAttributeAccess().getRule();
	}

	//ServiceAttribute:
	//	ElementEnabledAttribute | ElementExportedAttribute;
	public ServiceAttributeElements getServiceAttributeAccess() {
		return pServiceAttribute;
	}
	
	public ParserRule getServiceAttributeRule() {
		return getServiceAttributeAccess().getRule();
	}

	//ElementEnabledAttribute:
	//	"enabled" enabled=BOOLEAN;
	public ElementEnabledAttributeElements getElementEnabledAttributeAccess() {
		return pElementEnabledAttribute;
	}
	
	public ParserRule getElementEnabledAttributeRule() {
		return getElementEnabledAttributeAccess().getRule();
	}

	//ElementExportedAttribute:
	//	"exported" exported=BOOLEAN;
	public ElementExportedAttributeElements getElementExportedAttributeAccess() {
		return pElementExportedAttribute;
	}
	
	public ParserRule getElementExportedAttributeRule() {
		return getElementExportedAttributeAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
