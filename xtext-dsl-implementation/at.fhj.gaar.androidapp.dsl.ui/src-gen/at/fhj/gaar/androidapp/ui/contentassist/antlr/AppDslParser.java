/*
* generated by Xtext
*/
package at.fhj.gaar.androidapp.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import at.fhj.gaar.androidapp.services.AppDslGrammarAccess;

public class AppDslParser extends AbstractContentAssistParser {
	
	@Inject
	private AppDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected at.fhj.gaar.androidapp.ui.contentassist.antlr.internal.InternalAppDslParser createParser() {
		at.fhj.gaar.androidapp.ui.contentassist.antlr.internal.InternalAppDslParser result = new at.fhj.gaar.androidapp.ui.contentassist.antlr.internal.InternalAppDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getApplicationAttributeAccess().getAlternatives(), "rule__ApplicationAttribute__Alternatives");
					put(grammarAccess.getIntentStartableAccess().getAlternatives(), "rule__IntentStartable__Alternatives");
					put(grammarAccess.getAndroidAppProjectAccess().getGroup(), "rule__AndroidAppProject__Group__0");
					put(grammarAccess.getAndroidAppProjectAccess().getGroup_1(), "rule__AndroidAppProject__Group_1__0");
					put(grammarAccess.getApplicationAccess().getGroup(), "rule__Application__Group__0");
					put(grammarAccess.getApplicationAccess().getGroup_4(), "rule__Application__Group_4__0");
					put(grammarAccess.getApplicationTitleAccess().getGroup(), "rule__ApplicationTitle__Group__0");
					put(grammarAccess.getApplicationMinSdkAccess().getGroup(), "rule__ApplicationMinSdk__Group__0");
					put(grammarAccess.getApplicationTargetSdkAccess().getGroup(), "rule__ApplicationTargetSdk__Group__0");
					put(grammarAccess.getApplicationCompileSdkAccess().getGroup(), "rule__ApplicationCompileSdk__Group__0");
					put(grammarAccess.getApplicationPermissionListAccess().getGroup(), "rule__ApplicationPermissionList__Group__0");
					put(grammarAccess.getApplicationPermissionListAccess().getGroup_3(), "rule__ApplicationPermissionList__Group_3__0");
					put(grammarAccess.getApplicationElementListAccess().getGroup(), "rule__ApplicationElementList__Group__0");
					put(grammarAccess.getApplicationElementListAccess().getGroup_3(), "rule__ApplicationElementList__Group_3__0");
					put(grammarAccess.getApplicationMainActivityAccess().getGroup(), "rule__ApplicationMainActivity__Group__0");
					put(grammarAccess.getActivityAccess().getGroup(), "rule__Activity__Group__0");
					put(grammarAccess.getBroadcastReceiverAccess().getGroup(), "rule__BroadcastReceiver__Group__0");
					put(grammarAccess.getServiceAccess().getGroup(), "rule__Service__Group__0");
					put(grammarAccess.getAndroidAppProjectAccess().getApplicationsAssignment_0(), "rule__AndroidAppProject__ApplicationsAssignment_0");
					put(grammarAccess.getAndroidAppProjectAccess().getApplicationsAssignment_1_1(), "rule__AndroidAppProject__ApplicationsAssignment_1_1");
					put(grammarAccess.getApplicationAccess().getPackageNameAssignment_1(), "rule__Application__PackageNameAssignment_1");
					put(grammarAccess.getApplicationAccess().getAttributesAssignment_3(), "rule__Application__AttributesAssignment_3");
					put(grammarAccess.getApplicationAccess().getAttributesAssignment_4_1(), "rule__Application__AttributesAssignment_4_1");
					put(grammarAccess.getApplicationTitleAccess().getTitleAssignment_1(), "rule__ApplicationTitle__TitleAssignment_1");
					put(grammarAccess.getApplicationMinSdkAccess().getMinSdkAssignment_1(), "rule__ApplicationMinSdk__MinSdkAssignment_1");
					put(grammarAccess.getApplicationTargetSdkAccess().getTargetSdkAssignment_1(), "rule__ApplicationTargetSdk__TargetSdkAssignment_1");
					put(grammarAccess.getApplicationCompileSdkAccess().getCompileSdkAssignment_1(), "rule__ApplicationCompileSdk__CompileSdkAssignment_1");
					put(grammarAccess.getApplicationPermissionListAccess().getPermissionsAssignment_2(), "rule__ApplicationPermissionList__PermissionsAssignment_2");
					put(grammarAccess.getApplicationPermissionListAccess().getPermissionsAssignment_3_1(), "rule__ApplicationPermissionList__PermissionsAssignment_3_1");
					put(grammarAccess.getApplicationElementListAccess().getElementsAssignment_2(), "rule__ApplicationElementList__ElementsAssignment_2");
					put(grammarAccess.getApplicationElementListAccess().getElementsAssignment_3_1(), "rule__ApplicationElementList__ElementsAssignment_3_1");
					put(grammarAccess.getApplicationMainActivityAccess().getLauncherActivityAssignment_1(), "rule__ApplicationMainActivity__LauncherActivityAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			at.fhj.gaar.androidapp.ui.contentassist.antlr.internal.InternalAppDslParser typedParser = (at.fhj.gaar.androidapp.ui.contentassist.antlr.internal.InternalAppDslParser) parser;
			typedParser.entryRuleAndroidAppProject();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public AppDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(AppDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
